<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thinkgem.jeesite.modules.tz.dao.TzSfMemberIndexMapper" >

  <resultMap id="BaseResultMap" type="com.thinkgem.jeesite.modules.tz.entity.TzSfMemberIndex" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="fundId" property="fundId" jdbcType="BIGINT" />
    <result column="userId" property="userId" jdbcType="BIGINT" />
    <result column="memberType" property="memberType" jdbcType="VARCHAR" />
    <result column="isCurrent" property="isCurrent" jdbcType="INTEGER" />
    <result column="startDate" property="startDate" jdbcType="VARCHAR" />
    <result column="endDate" property="endDate" jdbcType="VARCHAR" />
    <result column="dispIndex" property="dispIndex" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="disabled" property="disabled" jdbcType="BIT" />
    <result column="orderNo" property="orderNo" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="createUserId" property="createUserId" jdbcType="BIGINT" />
    <result column="updateUserId" property="updateUserId" jdbcType="BIGINT" />
    <result column="createUserName" property="createUserName" jdbcType="VARCHAR" />
    <result column="updateUserName" property="updateUserName" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, fundId, userId, memberType, isCurrent, startDate, endDate, dispIndex, remark, 
    disabled, orderNo, createTime, updateTime, createUserId, updateUserId, createUserName, 
    updateUserName
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfMemberIndexExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_sf_member_index
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tz_sf_member_index
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tz_sf_member_index
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByExample" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfMemberIndexExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tz_sf_member_index
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfMemberIndex" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tz_sf_member_index (id, fundId, userId, 
      memberType, isCurrent, startDate, 
      endDate, dispIndex, remark, 
      disabled, orderNo, createTime, 
      updateTime, createUserId, updateUserId, 
      createUserName, updateUserName)
    values (#{id,jdbcType=BIGINT}, #{fundId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{memberType,jdbcType=VARCHAR}, #{isCurrent,jdbcType=INTEGER}, #{startDate,jdbcType=VARCHAR}, 
      #{endDate,jdbcType=VARCHAR}, #{dispIndex,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{disabled,jdbcType=BIT}, #{orderNo,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, #{updateUserId,jdbcType=BIGINT}, 
      #{createUserName,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfMemberIndex" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tz_sf_member_index
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fundId != null" >
        fundId,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="memberType != null" >
        memberType,
      </if>
      <if test="isCurrent != null" >
        isCurrent,
      </if>
      <if test="startDate != null" >
        startDate,
      </if>
      <if test="endDate != null" >
        endDate,
      </if>
      <if test="dispIndex != null" >
        dispIndex,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="disabled != null" >
        disabled,
      </if>
      <if test="orderNo != null" >
        orderNo,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="createUserId != null" >
        createUserId,
      </if>
      <if test="updateUserId != null" >
        updateUserId,
      </if>
      <if test="createUserName != null" >
        createUserName,
      </if>
      <if test="updateUserName != null" >
        updateUserName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fundId != null" >
        #{fundId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="memberType != null" >
        #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="isCurrent != null" >
        #{isCurrent,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="dispIndex != null" >
        #{dispIndex,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        #{disabled,jdbcType=BIT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfMemberIndexExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tz_sf_member_index
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tz_sf_member_index
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fundId != null" >
        fundId = #{record.fundId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.memberType != null" >
        memberType = #{record.memberType,jdbcType=VARCHAR},
      </if>
      <if test="record.isCurrent != null" >
        isCurrent = #{record.isCurrent,jdbcType=INTEGER},
      </if>
      <if test="record.startDate != null" >
        startDate = #{record.startDate,jdbcType=VARCHAR},
      </if>
      <if test="record.endDate != null" >
        endDate = #{record.endDate,jdbcType=VARCHAR},
      </if>
      <if test="record.dispIndex != null" >
        dispIndex = #{record.dispIndex,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.disabled != null" >
        disabled = #{record.disabled,jdbcType=BIT},
      </if>
      <if test="record.orderNo != null" >
        orderNo = #{record.orderNo,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        createUserId = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateUserId != null" >
        updateUserId = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createUserName != null" >
        createUserName = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserName != null" >
        updateUserName = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tz_sf_member_index
    set id = #{record.id,jdbcType=BIGINT},
      fundId = #{record.fundId,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      memberType = #{record.memberType,jdbcType=VARCHAR},
      isCurrent = #{record.isCurrent,jdbcType=INTEGER},
      startDate = #{record.startDate,jdbcType=VARCHAR},
      endDate = #{record.endDate,jdbcType=VARCHAR},
      dispIndex = #{record.dispIndex,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      disabled = #{record.disabled,jdbcType=BIT},
      orderNo = #{record.orderNo,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      createUserId = #{record.createUserId,jdbcType=BIGINT},
      updateUserId = #{record.updateUserId,jdbcType=BIGINT},
      createUserName = #{record.createUserName,jdbcType=VARCHAR},
      updateUserName = #{record.updateUserName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfMemberIndex" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tz_sf_member_index
    <set >
      <if test="fundId != null" >
        fundId = #{fundId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="memberType != null" >
        memberType = #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="isCurrent != null" >
        isCurrent = #{isCurrent,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        startDate = #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        endDate = #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="dispIndex != null" >
        dispIndex = #{dispIndex,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        disabled = #{disabled,jdbcType=BIT},
      </if>
      <if test="orderNo != null" >
        orderNo = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        createUserId = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null" >
        updateUserId = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        createUserName = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        updateUserName = #{updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfMemberIndex" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tz_sf_member_index
    set fundId = #{fundId,jdbcType=BIGINT},
      userId = #{userId,jdbcType=BIGINT},
      memberType = #{memberType,jdbcType=VARCHAR},
      isCurrent = #{isCurrent,jdbcType=INTEGER},
      startDate = #{startDate,jdbcType=VARCHAR},
      endDate = #{endDate,jdbcType=VARCHAR},
      dispIndex = #{dispIndex,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      disabled = #{disabled,jdbcType=BIT},
      orderNo = #{orderNo,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      createUserId = #{createUserId,jdbcType=BIGINT},
      updateUserId = #{updateUserId,jdbcType=BIGINT},
      createUserName = #{createUserName,jdbcType=VARCHAR},
      updateUserName = #{updateUserName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByInfoExample" resultMap="BaseResultMap" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfMemberIndexExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_sf_member_index
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  
</mapper>