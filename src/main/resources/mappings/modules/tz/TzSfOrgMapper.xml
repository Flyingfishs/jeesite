<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thinkgem.jeesite.modules.tz.dao.TzSfOrgMapper" >

  <resultMap id="BaseResultMap" type="com.thinkgem.jeesite.modules.tz.entity.TzSfOrg" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="orgCode" property="orgCode" jdbcType="VARCHAR" />
    <result column="orgName" property="orgName" jdbcType="VARCHAR" />
    <result column="orgNameEn" property="orgNameEn" jdbcType="VARCHAR" />
    <result column="orgFullName" property="orgFullName" jdbcType="VARCHAR" />
    <result column="orgFullNameEn" property="orgFullNameEn" jdbcType="VARCHAR" />
    <result column="namePY" property="namePY" jdbcType="VARCHAR" />
    <result column="orgWeb" property="orgWeb" jdbcType="VARCHAR" />
    <result column="userPhone" property="userPhone" jdbcType="VARCHAR" />
    <result column="userEmail" property="userEmail" jdbcType="VARCHAR" />
    <result column="linkmanContact" property="linkmanContact" jdbcType="VARCHAR" />
    <result column="imageurl" property="imageurl" jdbcType="VARCHAR" />
    <result column="regCountry" property="regCountry" jdbcType="VARCHAR" />
    <result column="regProv" property="regProv" jdbcType="VARCHAR" />
    <result column="regCity" property="regCity" jdbcType="VARCHAR" />
    <result column="regArea" property="regArea" jdbcType="VARCHAR" />
    <result column="regAddress" property="regAddress" jdbcType="VARCHAR" />
    <result column="officeCountry" property="officeCountry" jdbcType="VARCHAR" />
    <result column="officeProv" property="officeProv" jdbcType="VARCHAR" />
    <result column="officeCity" property="officeCity" jdbcType="VARCHAR" />
    <result column="officeArea" property="officeArea" jdbcType="VARCHAR" />
    <result column="officeAddress" property="officeAddress" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="prov" property="prov" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="country2" property="country2" jdbcType="VARCHAR" />
    <result column="prov2" property="prov2" jdbcType="VARCHAR" />
    <result column="city2" property="city2" jdbcType="VARCHAR" />
    <result column="area2" property="area2" jdbcType="VARCHAR" />
    <result column="address2" property="address2" jdbcType="VARCHAR" />
    <result column="phone2" property="phone2" jdbcType="VARCHAR" />
    <result column="country3" property="country3" jdbcType="VARCHAR" />
    <result column="prov3" property="prov3" jdbcType="VARCHAR" />
    <result column="city3" property="city3" jdbcType="VARCHAR" />
    <result column="area3" property="area3" jdbcType="VARCHAR" />
    <result column="address3" property="address3" jdbcType="VARCHAR" />
    <result column="phone3" property="phone3" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="shortProfile" property="shortProfile" jdbcType="VARCHAR" />
    <result column="team" property="team" jdbcType="VARCHAR" />
    <result column="shareholderStructure" property="shareholderStructure" jdbcType="VARCHAR" />
    <result column="researcherScale" property="researcherScale" jdbcType="VARCHAR" />
    <result column="brokerScale" property="brokerScale" jdbcType="VARCHAR" />
    <result column="salesmanScale" property="salesmanScale" jdbcType="VARCHAR" />
    <result column="market" property="market" jdbcType="VARCHAR" />
    <result column="investmentIdea" property="investmentIdea" jdbcType="VARCHAR" />
    <result column="isAssetMgt" property="isAssetMgt" jdbcType="BIT" />
    <result column="assetMgtScale" property="assetMgtScale" jdbcType="VARCHAR" />
    <result column="minAssetMgtScale" property="minAssetMgtScale" jdbcType="VARCHAR" />
    <result column="sharingMode" property="sharingMode" jdbcType="VARCHAR" />
    <result column="assetBrokerSharingMode" property="assetBrokerSharingMode" jdbcType="VARCHAR" />
    <result column="trustBrokerSharingMode" property="trustBrokerSharingMode" jdbcType="VARCHAR" />
    <result column="cases" property="cases" jdbcType="VARCHAR" />
    <result column="refMoney" property="refMoney" jdbcType="VARCHAR" />
    <result column="buildTime" property="buildTime" jdbcType="VARCHAR" />
    <result column="putNo" property="putNo" jdbcType="VARCHAR" />
    <result column="orgType" property="orgType" jdbcType="VARCHAR" />
    <result column="targetUrl" property="targetUrl" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="disabled" property="disabled" jdbcType="BIT" />
    <result column="orderNo" property="orderNo" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="createUserId" property="createUserId" jdbcType="INTEGER" />
    <result column="updateUserId" property="updateUserId" jdbcType="INTEGER" />
    <result column="createUserName" property="createUserName" jdbcType="VARCHAR" />
    <result column="updateUserName" property="updateUserName" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, orgCode, orgName, orgNameEn, orgFullName, orgFullNameEn, namePY, orgWeb, userPhone, 
    userEmail, linkmanContact, imageurl, regCountry, regProv, regCity, regArea, regAddress, 
    officeCountry, officeProv, officeCity, officeArea, officeAddress, country, prov, 
    city, area, address, phone, country2, prov2, city2, area2, address2, phone2, country3, 
    prov3, city3, area3, address3, phone3, description, shortProfile, team, shareholderStructure, 
    researcherScale, brokerScale, salesmanScale, market, investmentIdea, isAssetMgt, 
    assetMgtScale, minAssetMgtScale, sharingMode, assetBrokerSharingMode, trustBrokerSharingMode, 
    cases, refMoney, buildTime, putNo, orgType, targetUrl, remark, disabled, orderNo, 
    createTime, updateTime, createUserId, updateUserId, createUserName, updateUserName
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfOrgExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_sf_org
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tz_sf_org
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tz_sf_org
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByExample" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfOrgExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tz_sf_org
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfOrg" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tz_sf_org (id, orgCode, orgName, 
      orgNameEn, orgFullName, orgFullNameEn, 
      namePY, orgWeb, userPhone, 
      userEmail, linkmanContact, imageurl, 
      regCountry, regProv, regCity, 
      regArea, regAddress, officeCountry, 
      officeProv, officeCity, officeArea, 
      officeAddress, country, prov, 
      city, area, address, 
      phone, country2, prov2, 
      city2, area2, address2, 
      phone2, country3, prov3, 
      city3, area3, address3, 
      phone3, description, shortProfile, 
      team, shareholderStructure, researcherScale, 
      brokerScale, salesmanScale, market, 
      investmentIdea, isAssetMgt, assetMgtScale, 
      minAssetMgtScale, sharingMode, assetBrokerSharingMode, 
      trustBrokerSharingMode, cases, refMoney, 
      buildTime, putNo, orgType, 
      targetUrl, remark, disabled, 
      orderNo, createTime, updateTime, 
      createUserId, updateUserId, createUserName, 
      updateUserName)
    values (#{id,jdbcType=BIGINT}, #{orgCode,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, 
      #{orgNameEn,jdbcType=VARCHAR}, #{orgFullName,jdbcType=VARCHAR}, #{orgFullNameEn,jdbcType=VARCHAR}, 
      #{namePY,jdbcType=VARCHAR}, #{orgWeb,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{linkmanContact,jdbcType=VARCHAR}, #{imageurl,jdbcType=VARCHAR}, 
      #{regCountry,jdbcType=VARCHAR}, #{regProv,jdbcType=VARCHAR}, #{regCity,jdbcType=VARCHAR}, 
      #{regArea,jdbcType=VARCHAR}, #{regAddress,jdbcType=VARCHAR}, #{officeCountry,jdbcType=VARCHAR}, 
      #{officeProv,jdbcType=VARCHAR}, #{officeCity,jdbcType=VARCHAR}, #{officeArea,jdbcType=VARCHAR}, 
      #{officeAddress,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, #{prov,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{country2,jdbcType=VARCHAR}, #{prov2,jdbcType=VARCHAR}, 
      #{city2,jdbcType=VARCHAR}, #{area2,jdbcType=VARCHAR}, #{address2,jdbcType=VARCHAR}, 
      #{phone2,jdbcType=VARCHAR}, #{country3,jdbcType=VARCHAR}, #{prov3,jdbcType=VARCHAR}, 
      #{city3,jdbcType=VARCHAR}, #{area3,jdbcType=VARCHAR}, #{address3,jdbcType=VARCHAR}, 
      #{phone3,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{shortProfile,jdbcType=VARCHAR}, 
      #{team,jdbcType=VARCHAR}, #{shareholderStructure,jdbcType=VARCHAR}, #{researcherScale,jdbcType=VARCHAR}, 
      #{brokerScale,jdbcType=VARCHAR}, #{salesmanScale,jdbcType=VARCHAR}, #{market,jdbcType=VARCHAR}, 
      #{investmentIdea,jdbcType=VARCHAR}, #{isAssetMgt,jdbcType=BIT}, #{assetMgtScale,jdbcType=VARCHAR}, 
      #{minAssetMgtScale,jdbcType=VARCHAR}, #{sharingMode,jdbcType=VARCHAR}, #{assetBrokerSharingMode,jdbcType=VARCHAR}, 
      #{trustBrokerSharingMode,jdbcType=VARCHAR}, #{cases,jdbcType=VARCHAR}, #{refMoney,jdbcType=VARCHAR}, 
      #{buildTime,jdbcType=VARCHAR}, #{putNo,jdbcType=VARCHAR}, #{orgType,jdbcType=VARCHAR}, 
      #{targetUrl,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{disabled,jdbcType=BIT}, 
      #{orderNo,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{createUserName,jdbcType=VARCHAR}, 
      #{updateUserName,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfOrg" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tz_sf_org
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgCode != null" >
        orgCode,
      </if>
      <if test="orgName != null" >
        orgName,
      </if>
      <if test="orgNameEn != null" >
        orgNameEn,
      </if>
      <if test="orgFullName != null" >
        orgFullName,
      </if>
      <if test="orgFullNameEn != null" >
        orgFullNameEn,
      </if>
      <if test="namePY != null" >
        namePY,
      </if>
      <if test="orgWeb != null" >
        orgWeb,
      </if>
      <if test="userPhone != null" >
        userPhone,
      </if>
      <if test="userEmail != null" >
        userEmail,
      </if>
      <if test="linkmanContact != null" >
        linkmanContact,
      </if>
      <if test="imageurl != null" >
        imageurl,
      </if>
      <if test="regCountry != null" >
        regCountry,
      </if>
      <if test="regProv != null" >
        regProv,
      </if>
      <if test="regCity != null" >
        regCity,
      </if>
      <if test="regArea != null" >
        regArea,
      </if>
      <if test="regAddress != null" >
        regAddress,
      </if>
      <if test="officeCountry != null" >
        officeCountry,
      </if>
      <if test="officeProv != null" >
        officeProv,
      </if>
      <if test="officeCity != null" >
        officeCity,
      </if>
      <if test="officeArea != null" >
        officeArea,
      </if>
      <if test="officeAddress != null" >
        officeAddress,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="prov != null" >
        prov,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="country2 != null" >
        country2,
      </if>
      <if test="prov2 != null" >
        prov2,
      </if>
      <if test="city2 != null" >
        city2,
      </if>
      <if test="area2 != null" >
        area2,
      </if>
      <if test="address2 != null" >
        address2,
      </if>
      <if test="phone2 != null" >
        phone2,
      </if>
      <if test="country3 != null" >
        country3,
      </if>
      <if test="prov3 != null" >
        prov3,
      </if>
      <if test="city3 != null" >
        city3,
      </if>
      <if test="area3 != null" >
        area3,
      </if>
      <if test="address3 != null" >
        address3,
      </if>
      <if test="phone3 != null" >
        phone3,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="shortProfile != null" >
        shortProfile,
      </if>
      <if test="team != null" >
        team,
      </if>
      <if test="shareholderStructure != null" >
        shareholderStructure,
      </if>
      <if test="researcherScale != null" >
        researcherScale,
      </if>
      <if test="brokerScale != null" >
        brokerScale,
      </if>
      <if test="salesmanScale != null" >
        salesmanScale,
      </if>
      <if test="market != null" >
        market,
      </if>
      <if test="investmentIdea != null" >
        investmentIdea,
      </if>
      <if test="isAssetMgt != null" >
        isAssetMgt,
      </if>
      <if test="assetMgtScale != null" >
        assetMgtScale,
      </if>
      <if test="minAssetMgtScale != null" >
        minAssetMgtScale,
      </if>
      <if test="sharingMode != null" >
        sharingMode,
      </if>
      <if test="assetBrokerSharingMode != null" >
        assetBrokerSharingMode,
      </if>
      <if test="trustBrokerSharingMode != null" >
        trustBrokerSharingMode,
      </if>
      <if test="cases != null" >
        cases,
      </if>
      <if test="refMoney != null" >
        refMoney,
      </if>
      <if test="buildTime != null" >
        buildTime,
      </if>
      <if test="putNo != null" >
        putNo,
      </if>
      <if test="orgType != null" >
        orgType,
      </if>
      <if test="targetUrl != null" >
        targetUrl,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="disabled != null" >
        disabled,
      </if>
      <if test="orderNo != null" >
        orderNo,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="createUserId != null" >
        createUserId,
      </if>
      <if test="updateUserId != null" >
        updateUserId,
      </if>
      <if test="createUserName != null" >
        createUserName,
      </if>
      <if test="updateUserName != null" >
        updateUserName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orgCode != null" >
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="orgNameEn != null" >
        #{orgNameEn,jdbcType=VARCHAR},
      </if>
      <if test="orgFullName != null" >
        #{orgFullName,jdbcType=VARCHAR},
      </if>
      <if test="orgFullNameEn != null" >
        #{orgFullNameEn,jdbcType=VARCHAR},
      </if>
      <if test="namePY != null" >
        #{namePY,jdbcType=VARCHAR},
      </if>
      <if test="orgWeb != null" >
        #{orgWeb,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="linkmanContact != null" >
        #{linkmanContact,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="regCountry != null" >
        #{regCountry,jdbcType=VARCHAR},
      </if>
      <if test="regProv != null" >
        #{regProv,jdbcType=VARCHAR},
      </if>
      <if test="regCity != null" >
        #{regCity,jdbcType=VARCHAR},
      </if>
      <if test="regArea != null" >
        #{regArea,jdbcType=VARCHAR},
      </if>
      <if test="regAddress != null" >
        #{regAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeCountry != null" >
        #{officeCountry,jdbcType=VARCHAR},
      </if>
      <if test="officeProv != null" >
        #{officeProv,jdbcType=VARCHAR},
      </if>
      <if test="officeCity != null" >
        #{officeCity,jdbcType=VARCHAR},
      </if>
      <if test="officeArea != null" >
        #{officeArea,jdbcType=VARCHAR},
      </if>
      <if test="officeAddress != null" >
        #{officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="prov != null" >
        #{prov,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="country2 != null" >
        #{country2,jdbcType=VARCHAR},
      </if>
      <if test="prov2 != null" >
        #{prov2,jdbcType=VARCHAR},
      </if>
      <if test="city2 != null" >
        #{city2,jdbcType=VARCHAR},
      </if>
      <if test="area2 != null" >
        #{area2,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null" >
        #{address2,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null" >
        #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="country3 != null" >
        #{country3,jdbcType=VARCHAR},
      </if>
      <if test="prov3 != null" >
        #{prov3,jdbcType=VARCHAR},
      </if>
      <if test="city3 != null" >
        #{city3,jdbcType=VARCHAR},
      </if>
      <if test="area3 != null" >
        #{area3,jdbcType=VARCHAR},
      </if>
      <if test="address3 != null" >
        #{address3,jdbcType=VARCHAR},
      </if>
      <if test="phone3 != null" >
        #{phone3,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="shortProfile != null" >
        #{shortProfile,jdbcType=VARCHAR},
      </if>
      <if test="team != null" >
        #{team,jdbcType=VARCHAR},
      </if>
      <if test="shareholderStructure != null" >
        #{shareholderStructure,jdbcType=VARCHAR},
      </if>
      <if test="researcherScale != null" >
        #{researcherScale,jdbcType=VARCHAR},
      </if>
      <if test="brokerScale != null" >
        #{brokerScale,jdbcType=VARCHAR},
      </if>
      <if test="salesmanScale != null" >
        #{salesmanScale,jdbcType=VARCHAR},
      </if>
      <if test="market != null" >
        #{market,jdbcType=VARCHAR},
      </if>
      <if test="investmentIdea != null" >
        #{investmentIdea,jdbcType=VARCHAR},
      </if>
      <if test="isAssetMgt != null" >
        #{isAssetMgt,jdbcType=BIT},
      </if>
      <if test="assetMgtScale != null" >
        #{assetMgtScale,jdbcType=VARCHAR},
      </if>
      <if test="minAssetMgtScale != null" >
        #{minAssetMgtScale,jdbcType=VARCHAR},
      </if>
      <if test="sharingMode != null" >
        #{sharingMode,jdbcType=VARCHAR},
      </if>
      <if test="assetBrokerSharingMode != null" >
        #{assetBrokerSharingMode,jdbcType=VARCHAR},
      </if>
      <if test="trustBrokerSharingMode != null" >
        #{trustBrokerSharingMode,jdbcType=VARCHAR},
      </if>
      <if test="cases != null" >
        #{cases,jdbcType=VARCHAR},
      </if>
      <if test="refMoney != null" >
        #{refMoney,jdbcType=VARCHAR},
      </if>
      <if test="buildTime != null" >
        #{buildTime,jdbcType=VARCHAR},
      </if>
      <if test="putNo != null" >
        #{putNo,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null" >
        #{orgType,jdbcType=VARCHAR},
      </if>
      <if test="targetUrl != null" >
        #{targetUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        #{disabled,jdbcType=BIT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfOrgExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tz_sf_org
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tz_sf_org
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orgCode != null" >
        orgCode = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null" >
        orgName = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.orgNameEn != null" >
        orgNameEn = #{record.orgNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFullName != null" >
        orgFullName = #{record.orgFullName,jdbcType=VARCHAR},
      </if>
      <if test="record.orgFullNameEn != null" >
        orgFullNameEn = #{record.orgFullNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.namePY != null" >
        namePY = #{record.namePY,jdbcType=VARCHAR},
      </if>
      <if test="record.orgWeb != null" >
        orgWeb = #{record.orgWeb,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null" >
        userPhone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null" >
        userEmail = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanContact != null" >
        linkmanContact = #{record.linkmanContact,jdbcType=VARCHAR},
      </if>
      <if test="record.imageurl != null" >
        imageurl = #{record.imageurl,jdbcType=VARCHAR},
      </if>
      <if test="record.regCountry != null" >
        regCountry = #{record.regCountry,jdbcType=VARCHAR},
      </if>
      <if test="record.regProv != null" >
        regProv = #{record.regProv,jdbcType=VARCHAR},
      </if>
      <if test="record.regCity != null" >
        regCity = #{record.regCity,jdbcType=VARCHAR},
      </if>
      <if test="record.regArea != null" >
        regArea = #{record.regArea,jdbcType=VARCHAR},
      </if>
      <if test="record.regAddress != null" >
        regAddress = #{record.regAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.officeCountry != null" >
        officeCountry = #{record.officeCountry,jdbcType=VARCHAR},
      </if>
      <if test="record.officeProv != null" >
        officeProv = #{record.officeProv,jdbcType=VARCHAR},
      </if>
      <if test="record.officeCity != null" >
        officeCity = #{record.officeCity,jdbcType=VARCHAR},
      </if>
      <if test="record.officeArea != null" >
        officeArea = #{record.officeArea,jdbcType=VARCHAR},
      </if>
      <if test="record.officeAddress != null" >
        officeAddress = #{record.officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.prov != null" >
        prov = #{record.prov,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.country2 != null" >
        country2 = #{record.country2,jdbcType=VARCHAR},
      </if>
      <if test="record.prov2 != null" >
        prov2 = #{record.prov2,jdbcType=VARCHAR},
      </if>
      <if test="record.city2 != null" >
        city2 = #{record.city2,jdbcType=VARCHAR},
      </if>
      <if test="record.area2 != null" >
        area2 = #{record.area2,jdbcType=VARCHAR},
      </if>
      <if test="record.address2 != null" >
        address2 = #{record.address2,jdbcType=VARCHAR},
      </if>
      <if test="record.phone2 != null" >
        phone2 = #{record.phone2,jdbcType=VARCHAR},
      </if>
      <if test="record.country3 != null" >
        country3 = #{record.country3,jdbcType=VARCHAR},
      </if>
      <if test="record.prov3 != null" >
        prov3 = #{record.prov3,jdbcType=VARCHAR},
      </if>
      <if test="record.city3 != null" >
        city3 = #{record.city3,jdbcType=VARCHAR},
      </if>
      <if test="record.area3 != null" >
        area3 = #{record.area3,jdbcType=VARCHAR},
      </if>
      <if test="record.address3 != null" >
        address3 = #{record.address3,jdbcType=VARCHAR},
      </if>
      <if test="record.phone3 != null" >
        phone3 = #{record.phone3,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.shortProfile != null" >
        shortProfile = #{record.shortProfile,jdbcType=VARCHAR},
      </if>
      <if test="record.team != null" >
        team = #{record.team,jdbcType=VARCHAR},
      </if>
      <if test="record.shareholderStructure != null" >
        shareholderStructure = #{record.shareholderStructure,jdbcType=VARCHAR},
      </if>
      <if test="record.researcherScale != null" >
        researcherScale = #{record.researcherScale,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerScale != null" >
        brokerScale = #{record.brokerScale,jdbcType=VARCHAR},
      </if>
      <if test="record.salesmanScale != null" >
        salesmanScale = #{record.salesmanScale,jdbcType=VARCHAR},
      </if>
      <if test="record.market != null" >
        market = #{record.market,jdbcType=VARCHAR},
      </if>
      <if test="record.investmentIdea != null" >
        investmentIdea = #{record.investmentIdea,jdbcType=VARCHAR},
      </if>
      <if test="record.isAssetMgt != null" >
        isAssetMgt = #{record.isAssetMgt,jdbcType=BIT},
      </if>
      <if test="record.assetMgtScale != null" >
        assetMgtScale = #{record.assetMgtScale,jdbcType=VARCHAR},
      </if>
      <if test="record.minAssetMgtScale != null" >
        minAssetMgtScale = #{record.minAssetMgtScale,jdbcType=VARCHAR},
      </if>
      <if test="record.sharingMode != null" >
        sharingMode = #{record.sharingMode,jdbcType=VARCHAR},
      </if>
      <if test="record.assetBrokerSharingMode != null" >
        assetBrokerSharingMode = #{record.assetBrokerSharingMode,jdbcType=VARCHAR},
      </if>
      <if test="record.trustBrokerSharingMode != null" >
        trustBrokerSharingMode = #{record.trustBrokerSharingMode,jdbcType=VARCHAR},
      </if>
      <if test="record.cases != null" >
        cases = #{record.cases,jdbcType=VARCHAR},
      </if>
      <if test="record.refMoney != null" >
        refMoney = #{record.refMoney,jdbcType=VARCHAR},
      </if>
      <if test="record.buildTime != null" >
        buildTime = #{record.buildTime,jdbcType=VARCHAR},
      </if>
      <if test="record.putNo != null" >
        putNo = #{record.putNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orgType != null" >
        orgType = #{record.orgType,jdbcType=VARCHAR},
      </if>
      <if test="record.targetUrl != null" >
        targetUrl = #{record.targetUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.disabled != null" >
        disabled = #{record.disabled,jdbcType=BIT},
      </if>
      <if test="record.orderNo != null" >
        orderNo = #{record.orderNo,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        createUserId = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        updateUserId = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null" >
        createUserName = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserName != null" >
        updateUserName = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tz_sf_org
    set id = #{record.id,jdbcType=BIGINT},
      orgCode = #{record.orgCode,jdbcType=VARCHAR},
      orgName = #{record.orgName,jdbcType=VARCHAR},
      orgNameEn = #{record.orgNameEn,jdbcType=VARCHAR},
      orgFullName = #{record.orgFullName,jdbcType=VARCHAR},
      orgFullNameEn = #{record.orgFullNameEn,jdbcType=VARCHAR},
      namePY = #{record.namePY,jdbcType=VARCHAR},
      orgWeb = #{record.orgWeb,jdbcType=VARCHAR},
      userPhone = #{record.userPhone,jdbcType=VARCHAR},
      userEmail = #{record.userEmail,jdbcType=VARCHAR},
      linkmanContact = #{record.linkmanContact,jdbcType=VARCHAR},
      imageurl = #{record.imageurl,jdbcType=VARCHAR},
      regCountry = #{record.regCountry,jdbcType=VARCHAR},
      regProv = #{record.regProv,jdbcType=VARCHAR},
      regCity = #{record.regCity,jdbcType=VARCHAR},
      regArea = #{record.regArea,jdbcType=VARCHAR},
      regAddress = #{record.regAddress,jdbcType=VARCHAR},
      officeCountry = #{record.officeCountry,jdbcType=VARCHAR},
      officeProv = #{record.officeProv,jdbcType=VARCHAR},
      officeCity = #{record.officeCity,jdbcType=VARCHAR},
      officeArea = #{record.officeArea,jdbcType=VARCHAR},
      officeAddress = #{record.officeAddress,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      prov = #{record.prov,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      country2 = #{record.country2,jdbcType=VARCHAR},
      prov2 = #{record.prov2,jdbcType=VARCHAR},
      city2 = #{record.city2,jdbcType=VARCHAR},
      area2 = #{record.area2,jdbcType=VARCHAR},
      address2 = #{record.address2,jdbcType=VARCHAR},
      phone2 = #{record.phone2,jdbcType=VARCHAR},
      country3 = #{record.country3,jdbcType=VARCHAR},
      prov3 = #{record.prov3,jdbcType=VARCHAR},
      city3 = #{record.city3,jdbcType=VARCHAR},
      area3 = #{record.area3,jdbcType=VARCHAR},
      address3 = #{record.address3,jdbcType=VARCHAR},
      phone3 = #{record.phone3,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      shortProfile = #{record.shortProfile,jdbcType=VARCHAR},
      team = #{record.team,jdbcType=VARCHAR},
      shareholderStructure = #{record.shareholderStructure,jdbcType=VARCHAR},
      researcherScale = #{record.researcherScale,jdbcType=VARCHAR},
      brokerScale = #{record.brokerScale,jdbcType=VARCHAR},
      salesmanScale = #{record.salesmanScale,jdbcType=VARCHAR},
      market = #{record.market,jdbcType=VARCHAR},
      investmentIdea = #{record.investmentIdea,jdbcType=VARCHAR},
      isAssetMgt = #{record.isAssetMgt,jdbcType=BIT},
      assetMgtScale = #{record.assetMgtScale,jdbcType=VARCHAR},
      minAssetMgtScale = #{record.minAssetMgtScale,jdbcType=VARCHAR},
      sharingMode = #{record.sharingMode,jdbcType=VARCHAR},
      assetBrokerSharingMode = #{record.assetBrokerSharingMode,jdbcType=VARCHAR},
      trustBrokerSharingMode = #{record.trustBrokerSharingMode,jdbcType=VARCHAR},
      cases = #{record.cases,jdbcType=VARCHAR},
      refMoney = #{record.refMoney,jdbcType=VARCHAR},
      buildTime = #{record.buildTime,jdbcType=VARCHAR},
      putNo = #{record.putNo,jdbcType=VARCHAR},
      orgType = #{record.orgType,jdbcType=VARCHAR},
      targetUrl = #{record.targetUrl,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      disabled = #{record.disabled,jdbcType=BIT},
      orderNo = #{record.orderNo,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      createUserId = #{record.createUserId,jdbcType=INTEGER},
      updateUserId = #{record.updateUserId,jdbcType=INTEGER},
      createUserName = #{record.createUserName,jdbcType=VARCHAR},
      updateUserName = #{record.updateUserName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfOrg" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tz_sf_org
    <set >
      <if test="orgCode != null" >
        orgCode = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        orgName = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="orgNameEn != null" >
        orgNameEn = #{orgNameEn,jdbcType=VARCHAR},
      </if>
      <if test="orgFullName != null" >
        orgFullName = #{orgFullName,jdbcType=VARCHAR},
      </if>
      <if test="orgFullNameEn != null" >
        orgFullNameEn = #{orgFullNameEn,jdbcType=VARCHAR},
      </if>
      <if test="namePY != null" >
        namePY = #{namePY,jdbcType=VARCHAR},
      </if>
      <if test="orgWeb != null" >
        orgWeb = #{orgWeb,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        userPhone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        userEmail = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="linkmanContact != null" >
        linkmanContact = #{linkmanContact,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        imageurl = #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="regCountry != null" >
        regCountry = #{regCountry,jdbcType=VARCHAR},
      </if>
      <if test="regProv != null" >
        regProv = #{regProv,jdbcType=VARCHAR},
      </if>
      <if test="regCity != null" >
        regCity = #{regCity,jdbcType=VARCHAR},
      </if>
      <if test="regArea != null" >
        regArea = #{regArea,jdbcType=VARCHAR},
      </if>
      <if test="regAddress != null" >
        regAddress = #{regAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeCountry != null" >
        officeCountry = #{officeCountry,jdbcType=VARCHAR},
      </if>
      <if test="officeProv != null" >
        officeProv = #{officeProv,jdbcType=VARCHAR},
      </if>
      <if test="officeCity != null" >
        officeCity = #{officeCity,jdbcType=VARCHAR},
      </if>
      <if test="officeArea != null" >
        officeArea = #{officeArea,jdbcType=VARCHAR},
      </if>
      <if test="officeAddress != null" >
        officeAddress = #{officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="prov != null" >
        prov = #{prov,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="country2 != null" >
        country2 = #{country2,jdbcType=VARCHAR},
      </if>
      <if test="prov2 != null" >
        prov2 = #{prov2,jdbcType=VARCHAR},
      </if>
      <if test="city2 != null" >
        city2 = #{city2,jdbcType=VARCHAR},
      </if>
      <if test="area2 != null" >
        area2 = #{area2,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null" >
        address2 = #{address2,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null" >
        phone2 = #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="country3 != null" >
        country3 = #{country3,jdbcType=VARCHAR},
      </if>
      <if test="prov3 != null" >
        prov3 = #{prov3,jdbcType=VARCHAR},
      </if>
      <if test="city3 != null" >
        city3 = #{city3,jdbcType=VARCHAR},
      </if>
      <if test="area3 != null" >
        area3 = #{area3,jdbcType=VARCHAR},
      </if>
      <if test="address3 != null" >
        address3 = #{address3,jdbcType=VARCHAR},
      </if>
      <if test="phone3 != null" >
        phone3 = #{phone3,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="shortProfile != null" >
        shortProfile = #{shortProfile,jdbcType=VARCHAR},
      </if>
      <if test="team != null" >
        team = #{team,jdbcType=VARCHAR},
      </if>
      <if test="shareholderStructure != null" >
        shareholderStructure = #{shareholderStructure,jdbcType=VARCHAR},
      </if>
      <if test="researcherScale != null" >
        researcherScale = #{researcherScale,jdbcType=VARCHAR},
      </if>
      <if test="brokerScale != null" >
        brokerScale = #{brokerScale,jdbcType=VARCHAR},
      </if>
      <if test="salesmanScale != null" >
        salesmanScale = #{salesmanScale,jdbcType=VARCHAR},
      </if>
      <if test="market != null" >
        market = #{market,jdbcType=VARCHAR},
      </if>
      <if test="investmentIdea != null" >
        investmentIdea = #{investmentIdea,jdbcType=VARCHAR},
      </if>
      <if test="isAssetMgt != null" >
        isAssetMgt = #{isAssetMgt,jdbcType=BIT},
      </if>
      <if test="assetMgtScale != null" >
        assetMgtScale = #{assetMgtScale,jdbcType=VARCHAR},
      </if>
      <if test="minAssetMgtScale != null" >
        minAssetMgtScale = #{minAssetMgtScale,jdbcType=VARCHAR},
      </if>
      <if test="sharingMode != null" >
        sharingMode = #{sharingMode,jdbcType=VARCHAR},
      </if>
      <if test="assetBrokerSharingMode != null" >
        assetBrokerSharingMode = #{assetBrokerSharingMode,jdbcType=VARCHAR},
      </if>
      <if test="trustBrokerSharingMode != null" >
        trustBrokerSharingMode = #{trustBrokerSharingMode,jdbcType=VARCHAR},
      </if>
      <if test="cases != null" >
        cases = #{cases,jdbcType=VARCHAR},
      </if>
      <if test="refMoney != null" >
        refMoney = #{refMoney,jdbcType=VARCHAR},
      </if>
      <if test="buildTime != null" >
        buildTime = #{buildTime,jdbcType=VARCHAR},
      </if>
      <if test="putNo != null" >
        putNo = #{putNo,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null" >
        orgType = #{orgType,jdbcType=VARCHAR},
      </if>
      <if test="targetUrl != null" >
        targetUrl = #{targetUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        disabled = #{disabled,jdbcType=BIT},
      </if>
      <if test="orderNo != null" >
        orderNo = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        createUserId = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        updateUserId = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        createUserName = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        updateUserName = #{updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfOrg" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tz_sf_org
    set orgCode = #{orgCode,jdbcType=VARCHAR},
      orgName = #{orgName,jdbcType=VARCHAR},
      orgNameEn = #{orgNameEn,jdbcType=VARCHAR},
      orgFullName = #{orgFullName,jdbcType=VARCHAR},
      orgFullNameEn = #{orgFullNameEn,jdbcType=VARCHAR},
      namePY = #{namePY,jdbcType=VARCHAR},
      orgWeb = #{orgWeb,jdbcType=VARCHAR},
      userPhone = #{userPhone,jdbcType=VARCHAR},
      userEmail = #{userEmail,jdbcType=VARCHAR},
      linkmanContact = #{linkmanContact,jdbcType=VARCHAR},
      imageurl = #{imageurl,jdbcType=VARCHAR},
      regCountry = #{regCountry,jdbcType=VARCHAR},
      regProv = #{regProv,jdbcType=VARCHAR},
      regCity = #{regCity,jdbcType=VARCHAR},
      regArea = #{regArea,jdbcType=VARCHAR},
      regAddress = #{regAddress,jdbcType=VARCHAR},
      officeCountry = #{officeCountry,jdbcType=VARCHAR},
      officeProv = #{officeProv,jdbcType=VARCHAR},
      officeCity = #{officeCity,jdbcType=VARCHAR},
      officeArea = #{officeArea,jdbcType=VARCHAR},
      officeAddress = #{officeAddress,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      prov = #{prov,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      country2 = #{country2,jdbcType=VARCHAR},
      prov2 = #{prov2,jdbcType=VARCHAR},
      city2 = #{city2,jdbcType=VARCHAR},
      area2 = #{area2,jdbcType=VARCHAR},
      address2 = #{address2,jdbcType=VARCHAR},
      phone2 = #{phone2,jdbcType=VARCHAR},
      country3 = #{country3,jdbcType=VARCHAR},
      prov3 = #{prov3,jdbcType=VARCHAR},
      city3 = #{city3,jdbcType=VARCHAR},
      area3 = #{area3,jdbcType=VARCHAR},
      address3 = #{address3,jdbcType=VARCHAR},
      phone3 = #{phone3,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      shortProfile = #{shortProfile,jdbcType=VARCHAR},
      team = #{team,jdbcType=VARCHAR},
      shareholderStructure = #{shareholderStructure,jdbcType=VARCHAR},
      researcherScale = #{researcherScale,jdbcType=VARCHAR},
      brokerScale = #{brokerScale,jdbcType=VARCHAR},
      salesmanScale = #{salesmanScale,jdbcType=VARCHAR},
      market = #{market,jdbcType=VARCHAR},
      investmentIdea = #{investmentIdea,jdbcType=VARCHAR},
      isAssetMgt = #{isAssetMgt,jdbcType=BIT},
      assetMgtScale = #{assetMgtScale,jdbcType=VARCHAR},
      minAssetMgtScale = #{minAssetMgtScale,jdbcType=VARCHAR},
      sharingMode = #{sharingMode,jdbcType=VARCHAR},
      assetBrokerSharingMode = #{assetBrokerSharingMode,jdbcType=VARCHAR},
      trustBrokerSharingMode = #{trustBrokerSharingMode,jdbcType=VARCHAR},
      cases = #{cases,jdbcType=VARCHAR},
      refMoney = #{refMoney,jdbcType=VARCHAR},
      buildTime = #{buildTime,jdbcType=VARCHAR},
      putNo = #{putNo,jdbcType=VARCHAR},
      orgType = #{orgType,jdbcType=VARCHAR},
      targetUrl = #{targetUrl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      disabled = #{disabled,jdbcType=BIT},
      orderNo = #{orderNo,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      createUserId = #{createUserId,jdbcType=INTEGER},
      updateUserId = #{updateUserId,jdbcType=INTEGER},
      createUserName = #{createUserName,jdbcType=VARCHAR},
      updateUserName = #{updateUserName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByInfoExample" resultMap="BaseResultMap" parameterType="com.thinkgem.jeesite.modules.tz.entity.TzSfOrgExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_sf_org
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  
</mapper>